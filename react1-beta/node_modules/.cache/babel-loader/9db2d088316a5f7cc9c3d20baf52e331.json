{"ast":null,"code":"var _jsxFileName = \"/Users/sun/Desktop/Comp Sci 639 UI/HW/react1-alpha-YurenSUN/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      addedCourses: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(res => res.json()).then(data => this.setState({\n      allCourses: data,\n      filteredCourses: data,\n      subjects: this.getSubjects(data)\n    }));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1) subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  setCourses(courses) {\n    this.setState({\n      filteredCourses: courses\n    });\n  } // to add course\n  // input: the course json object\n\n\n  addCourse(course) {\n    // check whether the course was added before\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (const index in joined) {\n      //  course added before\n      if (joined[index].number === course.number) {\n        joined[index] = course;\n        added = 1;\n      }\n    }\n\n    if (!added) {\n      // course not added before\n      joined = joined.concat(course);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to add subsection\n  // input string: course number;section number;subsection number\n\n\n  addSubSection(subSection) {\n    // split to get course, section, subsetion number\n    var splited = subSection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2]; // get the data for current course\n\n    var curCourse;\n    var curSec;\n    var curSubSec;\n    var i, j, k;\n\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n\n            for (k = 0; k < curSec.subsections.length; k++) {\n              if (curSec.subsections[k].number === subSecNum) {\n                curSubSec = JSON.parse(JSON.stringify(curSec.subsections[k]));\n                curSec.subsections = [JSON.parse(JSON.stringify(curSec.subsections[k]))];\n                curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n                break;\n              }\n            }\n\n            break;\n          }\n        }\n\n        break;\n      }\n    } // traverse through the addedCourse to see whether current course exist\n\n\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // cur section exist, check subsection\n            for (k = 0; k < joined[i].sections[j].subsections.length; k++) {\n              if (joined[i].sections[j].subsections[k].number === subSecNum) {\n                added = 1;\n                break;\n              }\n            }\n\n            if (!added) {\n              // add the subsection\n              joined[i].sections[j].subsections[joined[i].sections[j].subsections.length] = curSubSec;\n              added = 1;\n            }\n\n            break;\n          }\n        } // cur course exist, section and subsection not exist\n\n\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n\n        break;\n      }\n    }\n\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to add section\n  // input string: course number;section number\n\n\n  addSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1]; // get the data for current course\n\n    var curCourse;\n    var curSec;\n    var i, j;\n\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n            break;\n          }\n        }\n\n        break;\n      }\n    } // traverse through the addedCourse to see whether current course exist\n\n\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // section exist\n            added = 1;\n            break;\n          }\n        } // cur course exist, section and subsection not exist\n\n\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n\n        break;\n      }\n    }\n\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to remove course\n  // input the course json object\n\n\n  remCourse(course) {\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var i;\n\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number !== course.number) {\n        // not the course to delete\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({\n      addedCourses: removed\n    });\n  } // to remove section\n  // input string: course number;section number\n\n\n  remSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n    var i, j;\n\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number === courseNum) {\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = []; // the course to remove section, keep the section not to remove\n\n        for (j = 0; j < ori[i].sections.length; j++) {\n          // add section not to remove\n          if (ori[i].sections[j].number !== sectionNum) {\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        } // if no section left, delete course\n\n\n        console.log(\"here\");\n        console.log(removed);\n      } else {\n        // not the course to remove section\n        removed.push(ori[i]);\n      }\n    }\n\n    console.log(removed);\n    this.setState({\n      addedCourses: removed\n    });\n  } // to remove subsection\n  // input string: course number;section number;subsection number\n\n\n  remSubSection(subsection) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"search\",\n      style: {\n        position: 'fixed',\n        zIndex: 1,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"search\",\n      title: \"Search\",\n      style: {\n        paddingTop: '5vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      setCourses: courses => this.setCourses(courses),\n      courses: this.state.allCourses,\n      subjects: this.state.subjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '20vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.filteredCourses,\n      allData: this.state.allCourses,\n      addSubSection: this.addSubSection.bind(this),\n      addSection: this.addSection.bind(this),\n      addCourse: this.addCourse.bind(this),\n      cartMode: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"cart\",\n      title: \"Cart\",\n      style: {\n        paddingTop: '5vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '5vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.addedCourses,\n      allData: this.state.allCourses,\n      remSubSection: this.remSubSection.bind(this),\n      remSection: this.remSection.bind(this),\n      remCourse: this.remCourse.bind(this),\n      cartMode: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sun/Desktop/Comp Sci 639 UI/HW/react1-alpha-YurenSUN/src/App.js"],"names":["React","Tabs","Tab","Sidebar","CourseArea","App","Component","constructor","props","state","allCourses","filteredCourses","subjects","addedCourses","componentDidMount","fetch","then","res","json","data","setState","getSubjects","push","course","Object","values","indexOf","subject","setCourses","courses","addCourse","joined","added","index","number","concat","addSubSection","subSection","splited","split","courseNum","sectionNum","subSecNum","curCourse","curSec","curSubSec","i","j","k","length","JSON","parse","stringify","sections","subsections","addSection","section","remCourse","ori","removed","remSection","console","log","remSubSection","subsection","render","position","zIndex","width","backgroundColor","paddingTop","marginLeft","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      addedCourses: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(\n      res => res.json()\n    ).then(data => this.setState({allCourses: data, filteredCourses: data, subjects: this.getSubjects(data)}));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for(const course of Object.values(data)) {\n      if(subjects.indexOf(course.subject) === -1)\n        subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  setCourses(courses) {\n    this.setState({filteredCourses: courses});\n  }\n\n  // to add course\n  // input: the course json object\n  addCourse(course) {\n    // check whether the course was added before\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (const index in joined){\n      //  course added before\n      if (joined[index].number === course.number){\n        joined[index] = course;\n        added = 1;\n      }\n    }\n\n    if (!added){\n      // course not added before\n      joined = joined.concat(course);\n    }\n\n    this.setState({ addedCourses: joined })\n  }\n\n  // to add subsection\n  // input string: course number;section number;subsection number\n  addSubSection(subSection){\n    // split to get course, section, subsetion number\n    var splited = subSection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2];\n\n    // get the data for current course\n    var curCourse;\n    var curSec;\n    var curSubSec;\n    var i, j, k;\n    for (i = 0; i< this.state.allCourses.length; i ++ ){\n      if (this.state.allCourses[i].number === courseNum){\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n        for (j = 0; j < curCourse.sections.length; j++){\n          if (curCourse.sections[j].number === sectionNum){\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            for (k = 0; k < curSec.subsections.length; k ++){\n              if (curSec.subsections[k].number === subSecNum){\n                curSubSec = JSON.parse(JSON.stringify(curSec.subsections[k]));\n                curSec.subsections = [JSON.parse(JSON.stringify(curSec.subsections[k]))];\n                curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n                break;\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    \n    // traverse through the addedCourse to see whether current course exist\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (i = 0; i< joined.length; i ++ ){\n      //  course added before\n      if (joined[i].number === courseNum){\n        // cur course exist, check section\n        for (j = 0; j< joined[i].sections.length; j ++){\n          if(joined[i].sections[j].number === sectionNum){\n            // cur section exist, check subsection\n            for (k = 0; k< joined[i].sections[j].subsections.length; k ++){\n              if (joined[i].sections[j].subsections[k].number === subSecNum){\n                added = 1;\n                break;\n              }\n            }\n            if (!added){\n              // add the subsection\n              joined[i].sections[j].subsections[joined[i].sections[j].subsections.length] = curSubSec;\n              added = 1;\n            }\n            break;\n          }\n        }\n        // cur course exist, section and subsection not exist\n        if (!added){\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n        break;\n      }\n    }\n    if (!added){\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({ addedCourses: joined });\n  }\n\n  // to add section\n  // input string: course number;section number\n  addSection(section){\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n\n    // get the data for current course\n    var curCourse;\n    var curSec;\n    var i, j;\n    for (i = 0; i< this.state.allCourses.length; i ++ ){\n      if (this.state.allCourses[i].number === courseNum){\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n        for (j = 0; j < curCourse.sections.length; j++){\n          if (curCourse.sections[j].number === sectionNum){\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // traverse through the addedCourse to see whether current course exist\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (i = 0; i< joined.length; i ++ ){\n      //  course added before\n      if (joined[i].number === courseNum){\n        // cur course exist, check section\n        for (j = 0; j< joined[i].sections.length; j ++){\n          if(joined[i].sections[j].number === sectionNum){\n            // section exist\n            added = 1;\n            break;\n          }\n        }\n        // cur course exist, section and subsection not exist\n        if (!added){\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n        break;\n      }\n    }\n    if (!added){\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({ addedCourses: joined });\n  }\n\n  // to remove course\n  // input the course json object\n  remCourse(course){\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var i;\n    for (i = 0; i < ori.length; i ++){\n      //  course added before\n      if ( ori[i].number !== course.number){\n        // not the course to delete\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({ addedCourses: removed })\n  }\n\n  // to remove section\n  // input string: course number;section number\n  remSection(section){\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    \n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n\n    var i, j;\n    for (i = 0; i< ori.length; i ++ ){\n      //  course added before\n      if (ori[i].number === courseNum){\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = [];\n        // the course to remove section, keep the section not to remove\n        for (j = 0; j< ori[i].sections.length; j ++){\n          // add section not to remove\n          if(ori[i].sections[j].number !== sectionNum){\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        }\n        // if no section left, delete course\n        console.log(\"here\")\n        console.log(removed);\n      }else{\n        // not the course to remove section\n        removed.push(ori[i])\n      }\n    }\n    console.log(removed)\n    this.setState({ addedCourses: removed })\n  }\n\n  // to remove subsection\n  // input string: course number;section number;subsection number\n  remSubSection(subsection){\n\n  }\n\n\n  render() {\n    return (\n      <>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossOrigin=\"anonymous\"\n        />\n\n\n\n        <Tabs defaultActiveKey=\"search\" style={{position: 'fixed', zIndex: 1, width: '100%', backgroundColor: 'white'}}>\n          <Tab eventKey=\"search\" title=\"Search\" style={{paddingTop: '5vh'}}>\n            <Sidebar setCourses={(courses) => this.setCourses(courses)} courses={this.state.allCourses} subjects={this.state.subjects}/>\n            <div style={{marginLeft: '20vw'}}>\n              <CourseArea data={this.state.filteredCourses} allData={this.state.allCourses} addSubSection={this.addSubSection.bind(this)} addSection={this.addSection.bind(this)} addCourse={this.addCourse.bind(this)} cartMode={false}/>\n          </div>\n          </Tab>\n\n          <Tab eventKey=\"cart\" title=\"Cart\" style={{paddingTop: '5vh'}}>\n            <div style={{marginLeft: '5vw'}}>\n              <CourseArea data={this.state.addedCourses} allData={this.state.allCourses} remSubSection={this.remSubSection.bind(this)} remSection={this.remSection.bind(this)} remCourse={this.remCourse.bind(this)} cartMode={true}/>\n            </div>\n          </Tab>\n        </Tabs> \n      </>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}