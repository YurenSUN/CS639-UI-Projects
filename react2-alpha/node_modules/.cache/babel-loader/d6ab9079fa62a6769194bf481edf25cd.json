{"ast":null,"code":"var _jsxFileName = \"/Users/sun/Desktop/Comp Sci 639 UI/HW/react2-alpha-YurenSUN/src/RecomCourseArea.js\";\nimport React from 'react';\nimport './App.css';\nimport RecomCourse from './RecomCourse';\n\nclass RecomCourseArea extends React.Component {\n  getCourses() {\n    let completed = Object.values(this.props.compleCourses)[0];\n    let courses = [];\n    let interests = [];\n    let added = [];\n    let wishReq = {}; // add wish courses and their dependencies first\n\n    var i;\n\n    if (this.props.wishCourses.length) {\n      for (const course of this.props.wishCourses) {\n        // add to wishlist because there are prereq not fulfilled\n        var cur_course = course.split(\";\")[0];\n        var cur_req = course.split(\";\")[1]; // add the wished course\n\n        courses.push( /*#__PURE__*/React.createElement(RecomCourse, {\n          key: \"recom \" + cur_course,\n          data: {\n            \"name\": cur_course.split(\": \")[1],\n            \"number\": cur_course.split(\": \")[0]\n          },\n          interests: \"\",\n          wishList: \"added to the waitlist\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }));\n        added.push(cur_course.split(\":\")[0]); // add the prereqs\n\n        var cur_req_list = cur_req.replace(\") AND (\", \";\").replace(\" OR \", \";\").replace(\"(\", \"\").replace(\")\", \"\").split(\";\");\n\n        for (i = 0; i < cur_req_list.length; i++) {\n          if (cur_req_list[i] in wishReq) {\n            wishReq[cur_req_list[i]].push(cur_course);\n          } else {\n            wishReq[cur_req_list[i]] = [cur_course.split(\":\")[0]];\n          }\n        }\n      } // add wish list prereq\n\n\n      for (const course of Object.values(this.props.courses)) {\n        if (cur_req_list.includes(course.number)) {\n          courses.push( /*#__PURE__*/React.createElement(RecomCourse, {\n            key: \"recom \" + course.number,\n            data: course,\n            interests: \"\",\n            wishList: \"a requisites for the course(s) in your wishlist: \" + wishReq[course.number].join(\" and \"),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }\n          }));\n          added.push(course.number);\n        }\n      }\n    } // generate the list of interests\n\n\n    if (this.props.interestedCourses.length) {\n      for (const course of Object.values(this.props.courses)) {\n        // generate the list of interests\n        if (this.props.interestedCourses.indexOf(course.number) !== -1) for (const keyword of course.keywords) if (interests.indexOf(keyword) === -1) interests.push(keyword);\n      } // get courses based on interests\n\n\n      for (const course of Object.values(this.props.courses)) {\n        // courses with interested keyword but not completed\n        if (completed && completed.includes(course.number)) {\n          continue;\n        } // skip added courses from wish list\n\n\n        if (added && added.includes(course.number)) {\n          continue;\n        }\n\n        var cur_interest = \"\";\n\n        for (const keyword of course.keywords) if (interests.indexOf(keyword) !== -1) cur_interest += keyword + \", \"; // if some keyword is interested\n\n\n        if (cur_interest !== \"\") {\n          courses.push( /*#__PURE__*/React.createElement(RecomCourse, {\n            key: \"recom \" + course.name,\n            data: course,\n            interests: cur_interest.substring(0, cur_interest.length - 2),\n            wishList: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 13\n            }\n          }));\n        }\n      }\n    }\n\n    return courses;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        display: this.getCourses().length ? \"none\" : \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, \" Give high ratings to the completed courses that you are interested in to find recommendations!\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"h-100 mt-2 ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, this.getCourses()));\n  }\n\n}\n\nexport default RecomCourseArea;","map":{"version":3,"sources":["/Users/sun/Desktop/Comp Sci 639 UI/HW/react2-alpha-YurenSUN/src/RecomCourseArea.js"],"names":["React","RecomCourse","RecomCourseArea","Component","getCourses","completed","Object","values","props","compleCourses","courses","interests","added","wishReq","i","wishCourses","length","course","cur_course","split","cur_req","push","cur_req_list","replace","includes","number","join","interestedCourses","indexOf","keyword","keywords","cur_interest","name","substring","render","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport RecomCourse from './RecomCourse';\n\nclass RecomCourseArea extends React.Component {\n  getCourses() {\n    let completed = Object.values(this.props.compleCourses)[0];\n    let courses = [];\n    let interests = [];\n    let added = [];\n    let wishReq = {};\n    // add wish courses and their dependencies first\n    var i;\n    if (this.props.wishCourses.length) {\n      for (const course of this.props.wishCourses) {\n        // add to wishlist because there are prereq not fulfilled\n        var cur_course = course.split(\";\")[0];\n        var cur_req = course.split(\";\")[1];\n        // add the wished course\n\n        courses.push(\n          <RecomCourse key={\"recom \" + cur_course} data={{ \"name\": cur_course.split(\": \")[1], \"number\": cur_course.split(\": \")[0] }} interests={\"\"} wishList={\"added to the waitlist\"} />\n        );\n        added.push(\n          cur_course.split(\":\")[0]\n        );\n        // add the prereqs\n        var cur_req_list = cur_req.replace(\") AND (\", \";\").replace(\" OR \", \";\").replace(\"(\", \"\").replace(\")\", \"\").split(\";\")\n        for (i = 0; i < cur_req_list.length; i++) {\n\n          if (cur_req_list[i] in wishReq) {\n            wishReq[cur_req_list[i]].push(cur_course)\n          } else {\n            wishReq[cur_req_list[i]] = [cur_course.split(\":\")[0]]\n          }\n        }\n      }\n\n      // add wish list prereq\n      for (const course of Object.values(this.props.courses)) {\n        if (cur_req_list.includes(course.number)) {\n          courses.push(\n            <RecomCourse key={\"recom \" + course.number} data={course} interests={\"\"} wishList={\"a requisites for the course(s) in your wishlist: \" + wishReq[course.number].join(\" and \")} />\n          );\n          added.push(\n            course.number\n          );\n        }\n      }\n    }\n\n    // generate the list of interests\n    if (this.props.interestedCourses.length) {\n\n\n      for (const course of Object.values(this.props.courses)) {\n        // generate the list of interests\n        if (this.props.interestedCourses.indexOf(course.number) !== -1)\n          for (const keyword of course.keywords)\n            if (interests.indexOf(keyword) === -1)\n              interests.push(keyword);\n      }\n\n      // get courses based on interests\n      for (const course of Object.values(this.props.courses)) {\n        // courses with interested keyword but not completed\n        if (completed && completed.includes(course.number)) {\n          continue;\n        }\n        // skip added courses from wish list\n        if (added && added.includes(course.number)) {\n          continue;\n        }\n\n        var cur_interest = \"\";\n        for (const keyword of course.keywords)\n          if (interests.indexOf(keyword) !== -1)\n            cur_interest += keyword + \", \"\n\n        // if some keyword is interested\n        if (cur_interest !== \"\") {\n          courses.push(\n            <RecomCourse key={\"recom \" + course.name} data={course} interests={cur_interest.substring(0, cur_interest.length - 2)} wishList={\"\"} />\n          )\n        }\n      }\n    }\n\n    return courses;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h3 style={{ display: (this.getCourses()).length ? \"none\" : \"block\" }}> Give high ratings to the completed courses that you are interested in to find recommendations!</h3>\n\n        <div class=\"h-100 mt-2 ml-1\">\n          {this.getCourses()}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RecomCourseArea;\n"]},"metadata":{},"sourceType":"module"}