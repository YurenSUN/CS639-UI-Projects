{"ast":null,"code":"var _jsxFileName = \"/Users/sun/Desktop/Comp Sci 639 UI/HW/react2-alpha-YurenSUN/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\nimport CompletedCourseArea from './CompleCourseArea';\nimport RecomCourseArea from './RecomCourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      addedCourses: [],\n      compleCourses: {},\n      interests: [],\n      interestedCourses: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(res => res.json()).then(data => this.setState({\n      allCourses: data,\n      filteredCourses: data,\n      subjects: this.getSubjects(data),\n      interests: this.getInterests(data)\n    }));\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/students/5022025924/classes/completed').then(res => res.json()).then(data => this.setState({\n      compleCourses: data\n    }));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1) subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  getInterests(data) {\n    let interests = [];\n    interests.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      for (const keyword of course.keywords) if (interests.indexOf(keyword) === -1) interests.push(keyword);\n    }\n\n    return interests;\n  }\n\n  setCourses(courses) {\n    this.setState({\n      filteredCourses: courses\n    });\n  } // to add course\n  // input: the course json object\n\n\n  addCourse(course) {\n    // check whether the course was added before\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (const index in joined) {\n      //  course added before\n      if (joined[index].number === course.number) {\n        joined[index] = course;\n        added = 1;\n      }\n    }\n\n    if (!added) {\n      // course not added before\n      joined = joined.concat(course);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to add subsection\n  // input string: course number;section number;subsection number\n\n\n  addSubSection(subSection) {\n    // split to get course, section, subsetion number\n    var splited = subSection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2]; // get the data for current course\n\n    var curCourse;\n    var curSec;\n    var curSubSec;\n    var i, j, k;\n\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n\n            for (k = 0; k < curSec.subsections.length; k++) {\n              if (curSec.subsections[k].number === subSecNum) {\n                curSubSec = JSON.parse(JSON.stringify(curSec.subsections[k]));\n                curSec.subsections = [JSON.parse(JSON.stringify(curSec.subsections[k]))];\n                curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n                break;\n              }\n            }\n\n            break;\n          }\n        }\n\n        break;\n      }\n    } // traverse through the addedCourse to see whether current course exist\n\n\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // cur section exist, check subsection\n            for (k = 0; k < joined[i].sections[j].subsections.length; k++) {\n              if (joined[i].sections[j].subsections[k].number === subSecNum) {\n                added = 1;\n                break;\n              }\n            }\n\n            if (!added) {\n              // add the subsection\n              joined[i].sections[j].subsections[joined[i].sections[j].subsections.length] = curSubSec;\n              added = 1;\n            }\n\n            break;\n          }\n        } // cur course exist, section and subsection not exist\n\n\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n\n        break;\n      }\n    }\n\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to add section\n  // input string: course number;section number\n\n\n  addSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1]; // get the data for current course\n\n    var curCourse;\n    var curSec;\n    var i, j;\n\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n            break;\n          }\n        }\n\n        break;\n      }\n    } // traverse through the addedCourse to see whether current course exist\n\n\n    var joined = this.state.addedCourses;\n    var added = 0;\n\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // section exist, replace with the whole section\n            joined[i].sections[j] = curSec;\n            added = 1;\n            break;\n          }\n        } // cur course exist, section and subsection not exist\n\n\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n\n        break;\n      }\n    }\n\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({\n      addedCourses: joined\n    });\n  } // to remove course\n  // input the course json object\n\n\n  remCourse(course) {\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var i;\n\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number !== course.number) {\n        // not the course to delete\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({\n      addedCourses: removed\n    });\n  } // to remove section\n  // input string: course number;section number\n\n\n  remSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n    var i, j;\n\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number === courseNum) {\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = []; // the course to remove section, keep the section not to remove\n\n        for (j = 0; j < ori[i].sections.length; j++) {\n          // add section not to remove\n          if (ori[i].sections[j].number !== sectionNum) {\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        } // if no section left, delete course\n\n\n        if (remCourse.sections.length) {\n          removed.push(remCourse);\n        }\n      } else {\n        // not the course to remove section\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({\n      addedCourses: removed\n    });\n  } // to remove subsection\n  // input string: course number;section number;subsection number\n\n\n  remSubSection(subsection) {\n    // split to get course, section, subsetion number\n    var splited = subsection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2];\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n    var remSection; // traverse through the addedCourse to see whether current course exist\n\n    var i, j, k;\n\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number === courseNum) {\n        // cur course exist, keep sections not to remove\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = [];\n\n        for (j = 0; j < ori[i].sections.length; j++) {\n          if (ori[i].sections[j].number === sectionNum) {\n            // cur section, keep subsection not to remove\n            remSection = JSON.parse(JSON.stringify(ori[i].sections[j]));\n            remSection.subsections = [];\n\n            for (k = 0; k < ori[i].sections[j].subsections.length; k++) {\n              if (ori[i].sections[j].subsections[k].number !== subSecNum) {\n                remSection.subsections[remSection.subsections.length] = ori[i].sections[j].subsections[k];\n              }\n            } // if no subsection left, delete section\n\n\n            if (remSection.subsections.length) {\n              remCourse.sections[remCourse.sections.length] = remSection;\n            }\n          } else {\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        } // if no section left, delete course\n\n\n        if (remCourse.sections.length) {\n          removed.push(remCourse);\n        }\n      } else {\n        // course not to remove\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({\n      addedCourses: removed\n    });\n  }\n\n  rating(rating) {\n    // in the format course number:rating\n    // get a list of interested areas and add courses to it.\n    // if rating < 3 or change to no rated, delete the related interests\n    // store as the formate course number: course name; list of interests\n    var rating_num = rating.split(\":\")[1];\n    var rating_course = rating.split(\":\")[0];\n    var int_courses = this.state.interestedCourses;\n\n    if (rating_num === \"No Rating\" || parseInt(rating_num) < 3) {\n      // remove from interested courses\n      for (var i = 0; i < int_courses.length; i++) {\n        if (int_courses[i] === rating_course) {\n          int_courses.splice(i, 1);\n        }\n      }\n    } else {\n      // add to interested courses\n      if (int_courses.indexOf(rating_course) === -1) int_courses.push(rating_course);\n    }\n\n    this.setState({\n      interestedCourses: int_courses\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\",\n      integrity: \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\",\n      crossOrigin: \"anonymous\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"header\", {\n      class: \"navbar navbar-expand-md bg-light pl-3 pt-3\",\n      style: {\n        height: \"5vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      class: \"header-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }\n    }, \"Course Search\")), /*#__PURE__*/React.createElement(Tabs, {\n      defaultActiveKey: \"search_cart\",\n      style: {\n        zIndex: 1,\n        width: '100%',\n        backgroundColor: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"search_cart\",\n      title: \"Search and Cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container-fluid m-0 p-0 overflow-hidden bg-light\",\n      style: {\n        height: \"95vh\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row m-0 p-0 vh-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-md-8 p-0 m-0 overflow-hidden vh-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row p-0 m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-3 border overflow-auto vh-100 pt-2 px-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      setCourses: courses => this.setCourses(courses),\n      courses: this.state.allCourses,\n      subjects: this.state.subjects,\n      interests: this.state.interests,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"col-9 border overflow-auto vh-100 pt-2 pb-5 px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.filteredCourses,\n      allData: this.state.allCourses,\n      addSubSection: this.addSubSection.bind(this),\n      addSection: this.addSection.bind(this),\n      addCourse: this.addCourse.bind(this),\n      cartMode: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"cartBg\",\n      class: \"col-md-4 border overflow-auto vh-100 pt-2 pb-5 px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CourseArea, {\n      data: this.state.addedCourses,\n      allData: this.state.allCourses,\n      remSubSection: this.remSubSection.bind(this),\n      remSection: this.remSection.bind(this),\n      remCourse: this.remCourse.bind(this),\n      cartMode: true,\n      compleCourses: this.state.compleCourses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Tab, {\n      eventKey: \"Completed\",\n      title: \"Completed Courses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }, \"Completed Courses\")), /*#__PURE__*/React.createElement(CompletedCourseArea, {\n      courses: this.state.allCourses,\n      compleCourses: this.state.compleCourses,\n      rating: this.rating.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Tab, {\n      title: \"Recommended Courses\",\n      eventKey: \"Recommended\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"p-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }, \"Recommended Courses\")), /*#__PURE__*/React.createElement(RecomCourseArea, {\n      courses: this.state.allCourses,\n      interestedCourses: this.state.interestedCourses,\n      compleCourses: this.state.compleCourses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sun/Desktop/Comp Sci 639 UI/HW/react2-alpha-YurenSUN/src/App.js"],"names":["React","Tabs","Tab","Sidebar","CourseArea","CompletedCourseArea","RecomCourseArea","App","Component","constructor","props","state","allCourses","filteredCourses","subjects","addedCourses","compleCourses","interests","interestedCourses","componentDidMount","fetch","then","res","json","data","setState","getSubjects","getInterests","push","course","Object","values","indexOf","subject","keyword","keywords","setCourses","courses","addCourse","joined","added","index","number","concat","addSubSection","subSection","splited","split","courseNum","sectionNum","subSecNum","curCourse","curSec","curSubSec","i","j","k","length","JSON","parse","stringify","sections","subsections","addSection","section","remCourse","ori","removed","remSection","remSubSection","subsection","rating","rating_num","rating_course","int_courses","parseInt","splice","render","height","zIndex","width","backgroundColor","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\nimport Sidebar from './Sidebar';\nimport CourseArea from './CourseArea';\nimport CompletedCourseArea from './CompleCourseArea';\nimport RecomCourseArea from './RecomCourseArea';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: {},\n      filteredCourses: {},\n      subjects: [],\n      addedCourses: [],\n      compleCourses: {},\n      interests: [],\n      interestedCourses: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/classes').then(\n      res => res.json()\n    ).then(data => this.setState({\n      allCourses: data, filteredCourses: data,\n      subjects: this.getSubjects(data), interests: this.getInterests(data)\n    }));\n\n    fetch('http://mysqlcs639.cs.wisc.edu:53706/api/react/students/5022025924/classes/completed').then(\n      res => res.json()\n    ).then(data => this.setState({ compleCourses: data }));\n  }\n\n  getSubjects(data) {\n    let subjects = [];\n    subjects.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      if (subjects.indexOf(course.subject) === -1)\n        subjects.push(course.subject);\n    }\n\n    return subjects;\n  }\n\n  getInterests(data) {\n    let interests = [];\n    interests.push(\"All\");\n\n    for (const course of Object.values(data)) {\n      for (const keyword of course.keywords)\n        if (interests.indexOf(keyword) === -1)\n          interests.push(keyword);\n    }\n    return interests;\n  }\n\n  setCourses(courses) {\n    this.setState({ filteredCourses: courses });\n  }\n\n  // to add course\n  // input: the course json object\n  addCourse(course) {\n    // check whether the course was added before\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (const index in joined) {\n      //  course added before\n      if (joined[index].number === course.number) {\n        joined[index] = course;\n        added = 1;\n      }\n    }\n\n    if (!added) {\n      // course not added before\n      joined = joined.concat(course);\n    }\n\n    this.setState({ addedCourses: joined })\n  }\n\n  // to add subsection\n  // input string: course number;section number;subsection number\n  addSubSection(subSection) {\n    // split to get course, section, subsetion number\n    var splited = subSection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2];\n\n    // get the data for current course\n    var curCourse;\n    var curSec;\n    var curSubSec;\n    var i, j, k;\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            for (k = 0; k < curSec.subsections.length; k++) {\n              if (curSec.subsections[k].number === subSecNum) {\n                curSubSec = JSON.parse(JSON.stringify(curSec.subsections[k]));\n                curSec.subsections = [JSON.parse(JSON.stringify(curSec.subsections[k]))];\n                curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n                break;\n              }\n            }\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n\n    // traverse through the addedCourse to see whether current course exist\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // cur section exist, check subsection\n            for (k = 0; k < joined[i].sections[j].subsections.length; k++) {\n              if (joined[i].sections[j].subsections[k].number === subSecNum) {\n                added = 1;\n                break;\n              }\n            }\n            if (!added) {\n              // add the subsection\n              joined[i].sections[j].subsections[joined[i].sections[j].subsections.length] = curSubSec;\n              added = 1;\n            }\n            break;\n          }\n        }\n        // cur course exist, section and subsection not exist\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n        break;\n      }\n    }\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({ addedCourses: joined });\n  }\n\n  // to add section\n  // input string: course number;section number\n  addSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n\n    // get the data for current course\n    var curCourse;\n    var curSec;\n    var i, j;\n    for (i = 0; i < this.state.allCourses.length; i++) {\n      if (this.state.allCourses[i].number === courseNum) {\n        curCourse = JSON.parse(JSON.stringify(this.state.allCourses[i]));\n        for (j = 0; j < curCourse.sections.length; j++) {\n          if (curCourse.sections[j].number === sectionNum) {\n            curSec = JSON.parse(JSON.stringify(curCourse.sections[j]));\n            curCourse.sections = [JSON.parse(JSON.stringify(curSec))];\n            break;\n          }\n        }\n        break;\n      }\n    }\n\n    // traverse through the addedCourse to see whether current course exist\n    var joined = this.state.addedCourses;\n    var added = 0;\n    for (i = 0; i < joined.length; i++) {\n      //  course added before\n      if (joined[i].number === courseNum) {\n        // cur course exist, check section\n        for (j = 0; j < joined[i].sections.length; j++) {\n          if (joined[i].sections[j].number === sectionNum) {\n            // section exist, replace with the whole section\n            joined[i].sections[j] = curSec;\n            added = 1;\n            break;\n          }\n        }\n        // cur course exist, section and subsection not exist\n        if (!added) {\n          joined[i].sections[joined[i].sections.length] = curSec;\n          added = 1;\n        }\n        break;\n      }\n    }\n    if (!added) {\n      // not added before\n      joined = joined.concat(curCourse);\n    }\n\n    this.setState({ addedCourses: joined });\n  }\n\n  // to remove course\n  // input the course json object\n  remCourse(course) {\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var i;\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number !== course.number) {\n        // not the course to delete\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({ addedCourses: removed })\n  }\n\n  // to remove section\n  // input string: course number;section number\n  remSection(section) {\n    var splited = section.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n\n    var i, j;\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number === courseNum) {\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = [];\n        // the course to remove section, keep the section not to remove\n        for (j = 0; j < ori[i].sections.length; j++) {\n          // add section not to remove\n          if (ori[i].sections[j].number !== sectionNum) {\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        }\n        // if no section left, delete course\n        if (remCourse.sections.length) {\n          removed.push(remCourse)\n        }\n      } else {\n        // not the course to remove section\n        removed.push(ori[i])\n      }\n    }\n    this.setState({ addedCourses: removed })\n  }\n\n  // to remove subsection\n  // input string: course number;section number;subsection number\n  remSubSection(subsection) {\n    // split to get course, section, subsetion number\n    var splited = subsection.split(\";\");\n    var courseNum = splited[0];\n    var sectionNum = splited[1];\n    var subSecNum = splited[2];\n\n    var ori = this.state.addedCourses;\n    var removed = [];\n    var remCourse;\n    var remSection;\n\n    // traverse through the addedCourse to see whether current course exist\n    var i, j, k;\n    for (i = 0; i < ori.length; i++) {\n      //  course added before\n      if (ori[i].number === courseNum) {\n        // cur course exist, keep sections not to remove\n        remCourse = JSON.parse(JSON.stringify(ori[i]));\n        remCourse.sections = [];\n        for (j = 0; j < ori[i].sections.length; j++) {\n          if (ori[i].sections[j].number === sectionNum) {\n            // cur section, keep subsection not to remove\n            remSection = JSON.parse(JSON.stringify(ori[i].sections[j]));\n            remSection.subsections = [];\n            for (k = 0; k < ori[i].sections[j].subsections.length; k++) {\n              if (ori[i].sections[j].subsections[k].number !== subSecNum) {\n                remSection.subsections[remSection.subsections.length] = ori[i].sections[j].subsections[k];\n              }\n            }\n            // if no subsection left, delete section\n            if (remSection.subsections.length) {\n              remCourse.sections[remCourse.sections.length] = remSection;\n            }\n          } else {\n            remCourse.sections[remCourse.sections.length] = ori[i].sections[j];\n          }\n        }\n        // if no section left, delete course\n        if (remCourse.sections.length) {\n          removed.push(remCourse)\n        }\n      } else {\n        // course not to remove\n        removed.push(ori[i]);\n      }\n    }\n\n    this.setState({ addedCourses: removed });\n  }\n\n  rating(rating) {\n    // in the format course number:rating\n    // get a list of interested areas and add courses to it.\n    // if rating < 3 or change to no rated, delete the related interests\n    // store as the formate course number: course name; list of interests\n    var rating_num = rating.split(\":\")[1];\n    var rating_course = rating.split(\":\")[0];\n\n    var int_courses = this.state.interestedCourses;\n\n    if (rating_num === \"No Rating\" || parseInt(rating_num) < 3) {\n      // remove from interested courses\n      for (var i = 0; i < int_courses.length; i++) {\n        if (int_courses[i] === rating_course) {\n          int_courses.splice(i, 1);\n        }\n      }\n    } else {\n      // add to interested courses\n      if (int_courses.indexOf(rating_course) === -1)\n        int_courses.push(rating_course);\n    }\n\n    this.setState({ interestedCourses: int_courses });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n          crossOrigin=\"anonymous\"\n        />\n        <header class=\"navbar navbar-expand-md bg-light pl-3 pt-3\" style={{ height: \"5vh\" }}>\n          <h1 class=\"header-text\">Course Search</h1>\n        </header>\n\n        <Tabs defaultActiveKey=\"search_cart\" style={{ zIndex: 1, width: '100%', backgroundColor: 'white' }}>\n          <Tab eventKey=\"search_cart\" title=\"Search and Cart\">\n            <div class=\"container-fluid m-0 p-0 overflow-hidden bg-light\" style={{ height: \"95vh\" }}>\n              <div class=\"row m-0 p-0 vh-100\">\n                <div class=\"col-md-8 p-0 m-0 overflow-hidden vh-100\">\n                  <div class=\"row p-0 m-0\">\n                    <div class=\"col-3 border overflow-auto vh-100 pt-2 px-2\">\n                      <Sidebar setCourses={(courses) => this.setCourses(courses)} courses={this.state.allCourses} subjects={this.state.subjects} interests={this.state.interests} />\n                    </div>\n                    <div class=\"col-9 border overflow-auto vh-100 pt-2 pb-5 px-3\" >\n                      <CourseArea data={this.state.filteredCourses} allData={this.state.allCourses} addSubSection={this.addSubSection.bind(this)} addSection={this.addSection.bind(this)} addCourse={this.addCourse.bind(this)} cartMode={false} />\n                    </div>\n                  </div>\n                </div>\n                <div id=\"cartBg\" class=\"col-md-4 border overflow-auto vh-100 pt-2 pb-5 px-3\">\n                  <CourseArea data={this.state.addedCourses} allData={this.state.allCourses} remSubSection={this.remSubSection.bind(this)} remSection={this.remSection.bind(this)} remCourse={this.remCourse.bind(this)} cartMode={true} compleCourses={this.state.compleCourses}/>\n                </div>\n              </div>\n            </div>\n          </Tab>\n\n          <Tab eventKey=\"Completed\" title=\"Completed Courses\">\n            <div class=\"p-2\">\n              <h3><strong>Completed Courses</strong></h3>\n              <CompletedCourseArea courses={this.state.allCourses} compleCourses={this.state.compleCourses} rating={this.rating.bind(this)} />\n            </div>\n          </Tab>\n\n          <Tab title=\"Recommended Courses\" eventKey=\"Recommended\">\n            <div class=\"p-2\"> \n              <h3><strong>Recommended Courses</strong></h3>\n              <RecomCourseArea courses={this.state.allCourses} interestedCourses={this.state.interestedCourses} compleCourses={this.state.compleCourses}/>\n            </div>\n          </Tab>\n        </Tabs>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}